#version=DEVEL

# For more information on this installation, take a look at
# https://github.com/openshift/origin/blob/master/docs/cluster_up_down.md#prerequisites

# System authorization information
auth --enableshadow --passalgo=sha512
text
skipx
install

url --url http://mirror.centos.org/centos/7/os/x86_64/
repo --name=epel --install --baseurl=https://ftp-stud.hs-esslingen.de/pub/epel/7/x86_64/
repo --name=updates --install --baseurl=http://mirror.centos.org/centos/7/updates/x86_64/

lang en_US.UTF-8
keyboard --vckeymap=de-nodeadkeys --xlayouts='de (nodeadkeys)'
timezone Europe/Berlin --isUtc

# root-password='password'
rootpw --iscrypted $6$kbawm7b8$acySk26QUJbX6cN.NIrqyxSSwNiJ1KYT1zDuNaLQ9ORbGMT84js353YlYMhpEFevc0OXJk1aahq/l7vZLo0Fh1

# Network information
# network  --bootproto=dhcp --device=enp0s3 --ipv6=auto --activate
# network  --hostname=openshift.example.com

bootloader --location=mbr
zerombr
clearpart --all --initlabel
autopart --type=lvm

services --enabled=postfix,network,ntpd,ntpdate,chronyd

reboot

%packages
@^minimal
@core
chrony
kexec-tools
epel-release
%end

%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end

%post
# Allow EPEL
open -s -w -- rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7

# Install Docker-Daemon
yum -y install docker

# Enable IP-Forwarding
echo "net.ipv4.ip_forward=1" > /etc/sysctl.d/ipv4.conf

# Enable local insecure Registry
cp -p /etc/containers/registries.conf /etc/containers/registries.conf.org
cat /etc/containers/registries.conf.org | tr '\n' '\r' | sed 's/\[registries.insecure\]\rregistries = \[\]/[registries.insecure]\rregistries = [\x27172.30.0.0\/16\x27]/g' | tr '\r' '\n' > /etc/containers/registries.conf
cat <<EOF> /etc/docker/daemon.json
{
   "insecure-registries": [
     "172.30.0.0/16"
   ]
}
EOF

# Activate Docker-Daemon
systemctl enable docker

# Start-Infos
cat <<EOF> /etc/motd

==============================================================================================
                             OpenShift-Standalone-Server
==============================================================================================

Start Cluster with:
----------------------------------------------------------------------------------------------
oc cluster up --public-hostname="openshift.example.com" --routing-suffix="192.168.200.97.nip.io" --loglevel=2

Stop Cluster with:
----------------------------------------------------------------------------------------------
oc cluster down

Add Cluster-Admin-Role to admin-user:
----------------------------------------------------------------------------------------------
oc login -u system:admin
oc adm policy add-cluster-role-to-user admin admin

==============================================================================================
EOF

# Allow OpenShift-API for Containers
firewall-offline-cmd --new-zone dockerc
firewall-offline-cmd --zone dockerc --add-source 172.16.0.0/12
firewall-offline-cmd --zone dockerc --add-source 192.168.200.0/24
firewall-offline-cmd --zone dockerc --add-port 8443/tcp
firewall-offline-cmd --zone dockerc --add-port 443/tcp
firewall-offline-cmd --zone dockerc --add-port 80/tcp
firewall-offline-cmd --zone dockerc --add-port 5000/tcp
firewall-offline-cmd --zone dockerc --add-port 53/udp
firewall-offline-cmd --zone dockerc --add-port 8053/udp

# Get OpenShift-Client
curl -s -L -o /tmp/openshift-origin-client-tools-v3.10.0-dd10d17-linux-64bit.tar.gz 'https://github.com/openshift/origin/releases/download/v3.10.0/openshift-origin-client-tools-v3.10.0-dd10d17-linux-64bit.tar.gz'

if ( echo 0f54235127884309d19b23e8e64e347f783efd6b5a94b49bfc4d0bf472efb5b8 /tmp/openshift-origin-client-tools-v3.10.0-dd10d17-linux-64bit.tar.gz | sha256sum -c --quiet ); then
  cd /tmp
  tar -zxvf /tmp/openshift-origin-client-tools-v3.10.0-dd10d17-linux-64bit.tar.gz */oc && mv openshift-origin-client-tools-v3.10.0-dd10d17-linux-64bit/oc /usr/bin/ && rm -rf openshift-origin-client-tools-v3.10.0-dd10d17-linux-64bit
fi

%end
